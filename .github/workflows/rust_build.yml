name: Rust

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: trace

jobs:
  format:
    name: Cargo Fmt and Cargo Sort
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Prepare
      run: |
        sudo ./scripts/install_deps.sh
        make .flatc
    - name: Code Format Check
      run: cargo fmt --all -- --check
    - name: Dependencies Sorted Check
      run: |
        cargo install cargo-sort
        cargo sort --check --workspace
  clippy:
    name: Cargo Clippy
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.4.0
      with:
        prefix-key: ""
        env-vars: ""
    - name: Install Deps
      run: |
        sudo ./scripts/install_deps.sh
    - name: Clippy Check With All Features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --features=jemalloc,trace,profiling,metrics -- -D warnings
    - name: Clippy Check Without Observation Features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --features=jemalloc -- -D warnings
  build:
    name: Cargo Build
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.4.0
      with:
        prefix-key: ""
        env-vars: ""
    - name: Install Deps
      run: |
        sudo ./scripts/install_deps.sh
    - name: Build
      run: cargo build
  test:
    name: Cargo Test
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.4.0
      with:
        prefix-key: ""
        env-vars: ""
    - name: Install Deps
      run: |
        sudo ./scripts/install_deps.sh
    - name: Install Nextest
      uses: taiki-e/install-action@nextest
    - name: Run tests
      run: cargo nextest run --profile default
  coverage:
    name: Coverage
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.4.0
        with:
          prefix-key: ""
          env-vars: ""
      - name: Install Deps
        run: |
          sudo ./scripts/install_deps.sh
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --features="jemalloc" --workspace --ignore-filename-regex "generated|linux" --codecov --output-path codecov.json
        env:
          RUST_BACKTRACE: 1
      - name: Upload coverage
        uses: Wandalen/wretry.action@master
        with:
          action: codecov/codecov-action@v2
          attempt_limit: 5
          attempt_delay: 60000 # 1 minute
          with: |
            files: codecov.json
            fail_ci_if_error: true
            verbose: true
            version: "v0.1.15"
